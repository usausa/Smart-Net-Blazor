@using Microsoft.AspNetCore.Components.Forms
@implements IDisposable

@if (EditContext?.GetValidationMessages().Any() ?? false)
{
    @ChildContent
}

@code {
    [CascadingParameter]
    private EditContext? EditContext { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    protected override void OnInitialized()
    {
        if (EditContext is null)
        {
            throw new InvalidOperationException($"{nameof(EditContext)} is required.");
        }

        EditContext.OnFieldChanged += EditContextOnOnFieldChanged;
    }

    public void Dispose()
    {
        if (EditContext is not null)
        {
            EditContext.OnFieldChanged -= EditContextOnOnFieldChanged;
        }
    }

    private void EditContextOnOnFieldChanged(object? sender, FieldChangedEventArgs e)
    {
        StateHasChanged();
    }
}
